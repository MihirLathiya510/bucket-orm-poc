# ==============================================
# BucketORM Configuration
# ==============================================

# Bucket name (required)
BUCKET_NAME=bucketorm-dev

# ==============================================
# MinIO Docker Configuration
# ==============================================

# MinIO credentials for Docker Compose
MINIO_ROOT_USER=minio
MINIO_ROOT_PASSWORD=minio123

# ==============================================
# Local Development (MinIO)
# ==============================================

# MinIO endpoint (when running locally)
S3_ENDPOINT=http://localhost:9000

# MinIO credentials (should match MINIO_ROOT_* above)
AWS_ACCESS_KEY_ID=minio
AWS_SECRET_ACCESS_KEY=minio123

# Required for MinIO
S3_FORCE_PATH_STYLE=true

# AWS region (not used by MinIO but required by SDK)
AWS_REGION=us-east-1

# ==============================================
# Production (AWS S3)
# ==============================================

# For production, comment out S3_ENDPOINT and S3_FORCE_PATH_STYLE
# and use real AWS credentials:

# AWS_ACCESS_KEY_ID=your_aws_access_key
# AWS_SECRET_ACCESS_KEY=your_aws_secret_key
# AWS_REGION=us-east-1
# BUCKET_NAME=your-production-bucket

# ==============================================
# Optional: Other S3-Compatible Services
# ==============================================

# Cloudflare R2
# S3_ENDPOINT=https://your-account-id.r2.cloudflarestorage.com
# S3_FORCE_PATH_STYLE=true

# DigitalOcean Spaces
# S3_ENDPOINT=https://your-region.digitaloceanspaces.com
# S3_FORCE_PATH_STYLE=false

# ==============================================
# Usage Examples
# ==============================================

# 1. Local Development with MinIO:
#    - Use the settings above (uncommented)
#    - Run: docker-compose up -d
#    - Run: npm run dev

# 2. Production with AWS S3:
#    - Comment out S3_ENDPOINT and S3_FORCE_PATH_STYLE
#    - Set real AWS credentials
#    - Set your production bucket name

# 3. Environment-based usage in code:
#    const orm = BucketORM.fromEnv();
